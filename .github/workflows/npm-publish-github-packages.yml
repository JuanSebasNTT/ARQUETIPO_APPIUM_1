name: Appium Tests with Reports

on:  
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Show project structure
      run: |
        echo "üìÅ Estructura del proyecto:"
        ls -la
        echo ""
        echo "üìÑ Contenido de package.json:"
        cat package.json || echo "‚ùå No se pudo leer package.json"
        echo ""
        echo "üîß Scripts disponibles:"
        npm run || echo "‚ùå No se pudieron listar scripts"
      
    - name: Create reports directories
      run: |
        mkdir -p reports
        mkdir -p reports/json
        mkdir -p reports/screenshots
      
    - name: Run login tests
      run: npx wdio config/wdio.conf.ts --spec "src/test/specs/login.test.ts"
      env:
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        
    - name: Check if json-to-html is available
      run: |
        if npx json-to-html --version 2>/dev/null; then
          echo "‚úÖ json-to-html est√° disponible"
          npx json-to-html ./reports/json/*.json --output ./reports/test-report.html
        else
          echo "‚ö†Ô∏è json-to-html no est√° disponible, generando reporte b√°sico..."
          echo "<html><body><h1>Test Report</h1><p>Generated at $(date)</p></body></html>" > ./reports/basic-report.html
        fi
        
    - name: Run custom report scripts if they exist
      run: |
        if [ -f "reports/generate-report.mjs" ]; then
          echo "üìä Ejecutando generate-report.mjs..."
          node reports/generate-report.mjs
        else
          echo "‚ÑπÔ∏è generate-report.mjs no encontrado"
        fi
        
        if [ -f "reports/clean-json.mjs" ]; then
          echo "üßπ Ejecutando clean-json.mjs..."
          node reports/clean-json.mjs
        else
          echo "‚ÑπÔ∏è clean-json.mjs no encontrado"
        fi
        
    - name: List all generated files
      run: |
        echo "üìÅ Contenido de reports/:"
        find reports/ -type f 2>/dev/null | head -20 || echo "No se encontraron archivos en reports/"
        
    - name: Upload HTML reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: appium-html-reports
        path: reports/*.html
        retention-days: 30
        
    - name: Upload JSON reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: appium-json-reports
        path: reports/json/
        retention-days: 30
        
    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: appium-screenshots
        path: reports/screenshots/
        retention-days: 30
        
    - name: Upload custom files
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: appium-custom-data
        path: |
          reports/*.mjs
          reports/*.json
          reports/steps.json
        retention-days: 30
        
    - name: Generate GitHub Summary
      if: always()
      run: |
        echo "# üìä Appium Test Execution Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Fecha de ejecuci√≥n:** $(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
        echo "**Workflow:** [$GITHUB_WORKFLOW]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Verificar resultados
        if [ "${{ job.status }}" = "success" ]; then
          echo "## ‚úÖ **Resultado: √âXITO**" >> $GITHUB_STEP_SUMMARY
          echo "Todos los tests pasaron correctamente." >> $GITHUB_STEP_SUMMARY
        else
          echo "## ‚ùå **Resultado: FALLO**" >> $GITHUB_STEP_SUMMARY
          echo "Algunos tests han fallado. Revisa los artifacts para m√°s detalles." >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## üì¶ Artifacts Generados:" >> $GITHUB_STEP_SUMMARY
        echo "- [HTML Reports](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" >> $GITHUB_STEP_SUMMARY
        echo "- [JSON Results](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" >> $GITHUB_STEP_SUMMARY
        echo "- [Screenshots](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" >> $GITHUB_STEP_SUMMARY
        echo "- [Custom Data](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)" >> $GITHUB_STEP_SUMMARY